@using TeReoLocalizer.Shared.Code
@using TeReoLocalizer.Shared.Code.Services
@inject IJSRuntime Js
@code {
    [Parameter]
    public Key Key { get; set; }
    [Parameter]
    public Localize Owner { get; set; }
    [CascadingParameter] 
    BlazingModalInstance BlazoredModal { get; set; } = default!;
    
    bool submitting;
    double percentCompleted;
    string? validation;
    
    async Task Cancel()
    {
        await BlazoredModal.CloseAsync();
    }

    async Task Submit()
    {
        if (submitting)
        {
            return;
        }

        validation = null;
        submitting = true;
        StateHasChanged();

        DataOrException<bool> result = await Owner.DoRegenerateKey(Key.Name, new Progress<CommandProgress>((progress) =>
        {
            percentCompleted = progress.Percentage;
            StateHasChanged();
        }));

        if (result.Exception is null)
        {
            await Cancel();
            return;
        }

        validation = result.Exception.Message;
        submitting = false;
        StateHasChanged();
    }
}

<EdModal Title="@($"Přegenerovat klíč {Key.Name}")">

    <p>Název klíče bude přegenerován konvenčně podle překladu v primárním jazyce <code>@Owner.Project.Settings.PrimaryLanguage</code>.</p>
    
    @if (submitting || validation is not null)
    {
        <div style="height: 10px;"></div>
    }
    
    @if (submitting)
    {
        <p>Probíhá přegenerování názvu klíče: @(percentCompleted.ToProgressPercent())%</p>
    }
    
    @if (validation is not null)
    {
        <div style="color: #FF4136;">@((MarkupString)validation)</div>
    }

    <EdButtonsContainer Style="gap: 10px;">
        <EdButton Disabled="@submitting" Size="ButtonSizes.Medium" OnClick="Submit">Potvrdit</EdButton>
        <EdButton Disabled="@submitting" Size="ButtonSizes.Medium" Design="@ButtonDesigns.Cancel" Fill="ButtonFillModes.Outline" OnClick="Cancel">Zrušit</EdButton>
    </EdButtonsContainer>
</EdModal>