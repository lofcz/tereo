@page "/boot"
@page "/"
@using NativeFileDialogCore
@using TeReoLocalizer.Shared.Code
@using TeReoLocalizer.Shared.Code.Services
@inject IJSRuntime Js
@inject IModalService Md
@inject NavigationManager Nm
@code {

    BootData bootData = new BootData();
    bool ready;
    string search = string.Empty;
    List<BootDataProject> visibleProjects = [];
    bool renderRecent => bootData.Projects.Count > 0;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await LoadData();
        ready = true;
    }

    async Task LoadData()
    {
        bootData = await BootService.GetBootData();
        ApplySearch();
    }

    async Task OpenProject()
    {
        DialogResult result = Dialog.FileOpenEx("csproj", dialogTitle: "Te Reo");

        if (!result.IsOk || result.Path is null)
        {
            return;
        }

        string csprojPath = result.Path;

        if (Path.GetExtension(csprojPath) is not ".csproj")
        {
            await Js.Toast(ToastTypes.Error, "Zvolený soubor musí mít koncovku .csproj");
            return;
        }

        await NavigateToLogin(csprojPath);
    }

    async Task OpenKnownProject(BootDataProject prj)
    {
        if (!File.Exists(prj.Csproj))
        {
            await Js.Toast(ToastTypes.Error, "Projekt neexsituje na disku");
            return;
        }

        await NavigateToLogin(prj.Csproj);
    }

    async Task NavigateToLogin(string path)
    {
        BootDataProject project = await BootService.LogProjectOpened(path);
        Nm.NavigateTo($"/login/login?projectId={project.Id}", true);

        if (SharedProxy.IsMaui && SharedProxy.Maximize is not null)
        {
            SharedProxy.Maximize.Invoke();
        }
    }

    void ApplySearch()
    {
        visibleProjects.Clear();
        
        if (search.Length is 0)
        {
            foreach (BootDataProject x in bootData.Projects)
            {
                visibleProjects.Add(x);
                x.IsVisible = true;
            }

            visibleProjects = visibleProjects.OrderByDescending(x => x.LastRan).Take(50).ToList();
            StateHasChanged();
            return;
        }
        
        Parallel.ForEach(bootData.Projects, x =>
        {
            x.IsVisible = x.Name.ToLowerInvariant().Contains(search.ToLowerInvariant().Trim());

            if (x.IsVisible)
            {
                visibleProjects.Add(x);
            }
        });
        
        visibleProjects = visibleProjects.OrderByDescending(x => x.LastRan).Take(50).ToList();
        StateHasChanged();
    }

    void DeleteProject(BootDataProject prj)
    {
        Md.ShowConfirmActionModal("Odstranit projekt", "Potvrďte odstranění projektu.", async () =>
        {
            await BootService.RemoveProject(prj.Id);
            await InvokeAsync(LoadData);
        });
    }
}

@if (!ready)
{
    return;
}

<div style="max-width: 600px; margin-left: auto; margin-right: auto;">
    
    <div style="display: flex; margin-bottom: 1rem; gap: 10px; @(!renderRecent ? "justify-content: center" : string.Empty)" ondragstart="return false;">
        <img style="margin-top: auto; margin-bottom: auto; user-select: none;" ondragstart="return false;" width="64" src="favicon.svg" />
        <div style="margin-top: auto; margin-bottom: auto; user-select: none;">
            <div class="gradient-text">Te Reo Localizer</div>
            <div class="form-text">@Project.LatestVersion / oficiální verze</div>
        </div>
    </div>
    
    @if (!renderRecent)
    {
        <div style="display: flex; justify-content: center; margin-bottom: 1rem;">
            <button @onclick="OpenProject" style="white-space: nowrap;" class="btn btn-secondary btn-sm">Otevřít projekt</button>
        </div>
        <div style="display: flex; justify-content: center;">
            <div class="form-text">Vyberte <code>.csproj</code> projekt, který chcete otevřít.</div>
        </div>
    }
    else
    {
        <div style="display: flex; gap: 50px; align-items: flex-start; margin-bottom: 30px;">
            <input class="form-control form-control-sm" @bind="search" @bind:after="ApplySearch" @bind:event="oninput" placeholder="Hledejte podle názvu projektu"/>
            <div style="display: flex;">
                <button @onclick="OpenProject" style="white-space: nowrap;" class="btn btn-secondary btn-sm">Otevřít projekt</button>
            </div>
        </div>   
    }

</div>

@if (renderRecent)
{
    <div style="max-width: 600px; margin-left: auto; margin-right: auto;">
        <div class="projects-container">
            
            @if (visibleProjects.Count is 0)
            {
                <div class="form-text">Nenalezeny žádné projekty.</div>
            }
            else
            {
                foreach (BootDataProject prj in visibleProjects)
                {
                    <div @onclick="@(() => OpenKnownProject(prj))" class="project-card card">
                        <div class="card-body">
                            <button @onclick="(() => DeleteProject(prj))" @onclick:stopPropagation="true" style="position: absolute; right: 12px; top: 10px;" class="btn-close"></button>
                            <div class="project-name">@prj.Name</div>
                            <div class="project-path">@prj.Csproj</div>
                        </div>
                    </div>
                }   
            }
        </div>
    </div>
}